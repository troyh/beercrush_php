#!/usr/bin/php
<?php

$line_by_line=true;

$opts=getopt('1');
if (isset($opts['1'])) {
	$line_by_line=false;
	array_splice($argv,1,1); // Remove that from argv
	--$argc;
}

if ($argc<2) {
	print "Usage: $argv[0] <json property> ...\n";
	exit;
}

if ($line_by_line) {
	$input=fopen("php://stdin",'r');
	while (($line=fgets($input))!==FALSE) {
		$values=jsonpath(json_decode($line));
		print join("\t",$values)."\n";
	}
	fclose($input);
}
else {
	$values=jsonpath(json_decode(file_get_contents("php://stdin")));
	print join("\t",$values)."\n";
}

function jsonpath($data) {
	global $argc;
	global $argv;

	$values=array();

	for ($i=1;$i<$argc;++$i) {
		$components=explode('.',$argv[$i]);
		// print "Components:".join(' ',$components)."\n";
		$ref=$data;
		// print "ref=";print_r($ref);print "\n";
		foreach ($components as $p) {
			// print "Part:$p"; print_r($ref);print "\n";
			$ref=$ref->$p;
		}
		if (is_scalar($ref))
			$values[]=$ref;
		else
			$values[]=json_encode($ref);
	}
	
	return $values;
}
?>