#!/bin/bash

if [ -z $1 ]; then
	echo "Usage: $0 <appserver|proxyserver|dbserver|memcacheqserver|buildserver>"
	exit;
fi

function APT_INSTALL_MULTI()
{
	for PKG in $*; do
		APT_INSTALL $PKG
	done
}

function APT_INSTALL()
{
	if ! dpkg-query --status $1 &> /dev/null ; then 
		sudo apt-get install $1
	fi
}


BEERCRUSH_WWW_DIR="/var/www/BeerCrush/"
BEERCRUSH_ETC_DIR="/etc/BeerCrush/"
BEERCRUSH_PHPINC_DIR="/usr/share/php/beercrush/"
BEERCRUSH_SOURCE_DIR="$HOME/beercrush/"
BEERCRUSH_LOCALDATA_DIR="/var/local/BeerCrush/"

#
# Common setup tasks
#
APT_INSTALL rsync

#
# Node-dependent setup tasks
#
case $1 in
	dbserver)
		echo "Setting up database server...";
		APT_INSTALL couchdb
		# TODO: make sure bind_address is set to 0.0.0.0 in /etc/couchdb/local.ini
		# TODO: get db to here in /var/lib/couchdb
		# TODO: setup replication between this server and another
		# TODO: update design docs from src/db/designdocs.json
		;;
	solrserver)
		APT_INSTALL_MULTI solr-tomcat6 tomcat6-admin
		# TODO: verify /etc/tomcat6/tomcat-users.xml is correct
		# TODO: copy the BeerCrush conf/solr/schema.xml to /etc/solr/conf/schema.xml
		# TODO: copy the BeerCrush conf/solr/solrconfig.xml to /etc/solr/conf/solrconfig.xml
		;;
	memcacheqserver)
		echo "Setting up memcacheq server...";
		# See http://memcachedb.org/memcacheq/INSTALL.html
		APT_INSTALL_MULTI libdb4.8 libdb4.8-dev libevent-1.4-2 libevent-dev
		
		# Install MemcacheQ:
		curl http://troyandgay.com/memcacheq_0.1.1-1_i386.deb > $HOME/memcacheq_0.1.1-1_i386.deb
		dpkg -i $HOME/memcacheq_0.1.1-1_i386.deb
		# 	curl --silent http://memcacheq.googlecode.com/files/memcacheq-0.1.1.tar.gz > $HOME/memcacheq-0.1.1.tar.gz
		# 	cd $HOME; tar xvzf memcacheq-0.1.1.tar.gz; cd memcacheq-0.1.1
		#	./configure --enable-threads
		#	make
		#	sudo make install
		
		# Make sure memcacheq is running
		# If not, start memcacheq:
		memcacheq -d -r -H /var/lib/memcacheq -N -v -L 1024 -B 1024 > /var/log/memcacheq.log 2>&1
		;;
	buildserver)
		echo "Setting up build server...";
		
		# Run this script again to setup as a webserver (a buildserver is also a webserver)
		$0 webserver
		;;
	appserver)
		echo "Setting up web server...";

		APT_INSTALL_MULTI apache2 php5 php5-cli php5-dev php5-curl php5-imagick php5-uuid php5-memcached php-apc spread libspread1-dev libfcgi-dev xmlstarlet subversion
		
		if [ ! -d $BEERCRUSH_SOURCE_DIR ]; then
			# Get code from Subversion
			svn co https://troyandgay.com/svn/projects/beerliberation $BEERCRUSH_SOURCE_DIR
		else
			# Get the latest version
			svn update $BEERCRUSH_SOURCE_DIR
		fi
		
		# TODO: copy files from build server to here
		# TODO: configure syslog.conf for OAK logging
		# TODO: config logrotate for /var/log/oak.log
		# TODO: install and setup PHP's APC (opcode cache)
		# TODO: make autocompletenames.txt and latlonpairs.txt in /var/local/BeerCrush/meta
		# TODO: build fcgi binaries
		# TODO: Config PHP FastCGI
		# TODO: turn off PHP's magic quotes
		# TODO: make sure PHP's include_path is correct and uncommented in php.ini

		for DIR in $BEERCRUSH_WWW_DIR $BEERCRUSH_ETC_DIR $BEERCRUSH_LOCALDATA_DIR $BEERCRUSH_PHPINC_DIR /var/run/BeerCrush $BEERCRUSH_WWW_DIR/uploads; do
			mkdir -p $DIR;
		done
		
		if [ ! -f $BEERCRUSH_ETC_DIR/webapp.conf ]; then
			echo "$BEERCRUSH_ETC_DIR/webapp.conf doesn't exist";
			exit;
		fi

		# TODO: verify that the OAK.conf file is correct
		
		# TODO: make this work:
		# sudo pecl install spread
		
		# TODO: install cgic205-patched.tar.bz2
		# TODO: run Make to build what needs to be built (like api/autocomplete.fcgi)
		
		# TODO: install libmemcached 0.28+
		# TODO: pecl install memcached
		# TODO: make sure permissions are correct for $BEERCRUSH_WWW_DIR and subdirs (beercrush group?)
		
		# Copy some files from the source tree
		for D in api css img js html php; do 
			sudo rsync --recursive --delete $D/ $BEERCRUSH_WWW_DIR/$D/; 
		done
		sudo rsync --recursive --delete src/phpinc/ $BEERCRUSH_PHPINC_DIR/

		# TODO: kill update_doc, if running, and start new process

		if [ ! -f /etc/apache2/sites-enabled/BeerCrush ]; then
			echo "You must create /etc/apache2/sites-available/BeerCrush and then do a2ensite BeerCrush";
			exit;
		fi
		
		;;
	proxyserver)
		echo "Setting up reverse proxy server...";
		
		APT_INSTALL_MULTI nginx
		
		;;
esac
